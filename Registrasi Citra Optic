import numpy as np
from matplotlib import pyplot as plt
from skimage.color import rgb2gray
from skimage.data import stereo_motorcycle, vortex
from skimage.transform import warp
from skimage.registration import optical_flow_tvl1, optical_flow_ilk

# --- Muat urutannya
image0, image1, disp = stereo_motorcycle()

# --- Konversi gambar ke tingkat abu-abu: warna tidak didukung.
image0 = rgb2gray(image0)
image1 = rgb2gray(image1)

# --- Hitung aliran optik
v, u = optical_flow_tvl1(image0, image1)

# --- Gunakan perkiraan aliran optik untuk pendaftaran

nr, nc = image0.shape

row_coords, col_coords = np.meshgrid(np.arange(nr), np.arange(nc),
                                     indexing='ij')

image1_warp = warp(image1, np.array([row_coords + v, col_coords + u]),
                   mode='edge')

# membangun gambar RGB dengan urutan yang tidak terdaftar
seq_im = np.zeros((nr, nc, 3))
seq_im[..., 0] = image1
seq_im[..., 1] = image0
seq_im[..., 2] = image0

# membangun gambar RGB dengan urutan terdaftar
reg_im = np.zeros((nr, nc, 3))
reg_im[..., 0] = image1_warp
reg_im[..., 1] = image0
reg_im[..., 2] = image0

# membangun gambar RGB dengan urutan terdaftar
target_im = np.zeros((nr, nc, 3))
target_im[..., 0] = image0
target_im[..., 1] = image0
target_im[..., 2] = image0

# --- Tunjukkan hasilnya

fig, (ax0, ax1, ax2) = plt.subplots(3, 1, figsize=(5, 10))

ax0.imshow(seq_im)
ax0.set_title("Urutan tidak terdaftar")
ax0.set_axis_off()

ax1.imshow(reg_im)
ax1.set_title("Urutan terdaftar")
ax1.set_axis_off()

ax2.imshow(target_im)
ax2.set_title("Target")
ax2.set_axis_off()

fig.tight_layout()
